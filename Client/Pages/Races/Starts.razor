@inject IRaceSvc svc

@if (Error != null)
{
	<div class="alert alert-danger">@Error</div>
}
@if (StartsList == null)
{
	<LoadingSpinner />
}
else
{
	<div class="row">
		<div class="col">
			<table class="table table-stripped table-hover table-bordered">
				<thead>
					<tr>
						<th>Заезд</th>
						<th>Старт</th>
						<th>Категории</th>
						<th></th>
					</tr>
				</thead>
				<tbody>
					@foreach (var start in StartsList)
					{
						<tr>
						</tr>
					}
				</tbody>

			</table>
		</div>
	</div>
}

@code {
	[Parameter]
	public int RaceId { get; set; }

	private string? Error;
	private ICollection<Proto.Start>? StartsList { get; set; }


	protected override async Task OnInitializedAsync()
	{
		try
		{
			if (RaceId <= 0) throw new ArgumentException("RaceId incorrect");
			StartsList = await svc.GetStartsAsync(RaceId);
		}
		catch (Exception ex)
		{
			Error = ex.ToString();
		}

	}
}
