<div class="modal @modalClass " tabindex="-1" role="dialog" style="display:@modalDisplay; overflow-y: auto;">
    <div class="modal-dialog @modalSizeClass modal-dialog-scrollable " role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @Body
            </div>
            <div class="modal-footer">
                @Footer
            </div>
        </div>
    </div>
</div>

@if (showBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}

@code {
    [Parameter]
    public RenderFragment Title { get; set; }

    [Parameter]
    public RenderFragment Body { get; set; }

    [Parameter]
    public RenderFragment Footer { get; set; }

    [Parameter]
    public ModalSize Size {get; set;}

    public enum ModalSize { Default, Small, Large, ExtraLarge };
    private string modalDisplay = "none;";
    private string modalClass = "";
    private bool showBackdrop = false;
 
    private string modalSizeClass {
        get {
            switch (Size) {
                case ModalSize.Default : return "";
                case ModalSize.Small : return "modal-sm";
                case ModalSize.Large: return "modal-lg";
                case ModalSize: return "modal-xl";
                default: throw new Exception($"Not implemented modal size: {Size}");
            }
        }
    }
    public void Open()
    {
        modalDisplay = "block;";
        modalClass = "show";
        showBackdrop = true;
        StateHasChanged();
    }

    public void Close()
    {
        modalDisplay = "none";
        modalClass = "";
        showBackdrop = false;
        StateHasChanged();
    }
}